function [zd]=rfunc(z,u,t)%    function for Constrained motion of Trebuchet (mass not on ground)% Nov 27, 1996% Joseph C. Slaterglobal l1 l2 l3 l4 l5 m1 m2 m3 g h N mu iphi1=z(1);phi2=z(3);phi3=z(5);phi1d=z(2);phi2d=z(4);phi3d=z(6);zd(1)=z(2);zd(3)=z(4);zd(5)=z(6);zd(2)= (-((g*sin(phi1) - l2*sin(phi1 - phi2)*...          power(phi2d,2))/l1) - ...    l2*cos(phi1 - phi2)*(-(l1*l3*l5*m3*...           cos(cos((h - l5*cos(phi2))/l3) + phi2)*...           (-(g*sqrt(1 - power(h - l5*cos(phi2),2)/power(l3,2))) - ...             l5*sin(cos((h - l5*cos(phi2))/l3) + phi2)*...              power(phi2d,2))) + ...        l3*(l1*l2*m1*cos(phi1 - phi2)*...            (g*sin(phi1) - l2*sin(phi1 - phi2)*...               power(phi2d,2)) + ...           l1*(-(g*l2*m1*sin(phi2)) + g*l4*m2*sin(phi2) + ...              g*l5*m3*sin(phi2) + ...              l1*l2*m1*sin(phi1 - phi2)*...               power(phi1d,2) + ...              power(l5,3)*m3*power(sin(phi2),2)*...                sin(cos((h - l5*cos(phi2))/l3) + phi2)*...                power(phi2d,2)/...               (l3*(1 - power(h - l5*cos(phi2),2)/power(l3,2))))))/...     (l1*(l3*(l1*(power(l2,2)*m1 + power(l4,2)*m2 + power(l5,2)*m3) - ...            l1*power(l2,2)*m1*power(cos(phi1 - phi2),2)) - ...         l1*l3*power(l5,2)*m3*power(cos(cos((h - l5*cos(phi2))/l3) + ...             phi2),2))));zd(4)= (-((-(l1*l3*l5*m3*cos(cos((h - l5*cos(phi2))/l3) + phi2)*...           (-(g*sqrt(1 - power(h - l5*cos(phi2),2)/power(l3,2))) - ...             l5*sin(cos((h - l5*cos(phi2))/l3) + phi2)*...              power(phi2d,2))) + ...        l3*(l1*l2*m1*cos(phi1 - phi2)*...            (g*sin(phi1) - l2*sin(phi1 - phi2)*...               power(phi2d,2)) + ...           l1*(-(g*l2*m1*sin(phi2)) + g*l4*m2*sin(phi2) + ...              g*l5*m3*sin(phi2) + ...              l1*l2*m1*sin(phi1 - phi2)*...               power(phi1d,2) + ...              power(l5,3)*m3*power(sin(phi2),2)*...                sin(cos((h - l5*cos(phi2))/l3) + phi2)*...                power(phi2d,2)/...               (l3*(1 - power(h - l5*cos(phi2),2)/power(l3,2))))))/...      (l3*(l1*(power(l2,2)*m1 + power(l4,2)*m2 + power(l5,2)*m3) - ...           l1*power(l2,2)*m1*power(cos(phi1 - phi2),2)) - ...        l1*l3*power(l5,2)*m3*power(cos(cos((h - l5*cos(phi2))/l3) + ...            phi2),2))));zd(6)= (-((-(g*sqrt(1 - power(h - l5*cos(phi2),2)/power(l3,2))) - ...         l5*sin(cos((h - l5*cos(phi2))/l3) + phi2)*...          power(phi2d,2))/l3) + ...    l5*cos(cos((h - l5*cos(phi2))/l3) + phi2)*...      (-(l1*l3*l5*m3*cos(cos((h - l5*cos(phi2))/l3) + phi2)*...           (-(g*sqrt(1 - power(h - l5*cos(phi2),2)/power(l3,2))) - ...             l5*sin(cos((h - l5*cos(phi2))/l3) + phi2)*...              power(phi2d,2))) + ...        l3*(l1*l2*m1*cos(phi1 - phi2)*...            (g*sin(phi1) - l2*sin(phi1 - phi2)*...               power(phi2d,2)) + ...           l1*(-(g*l2*m1*sin(phi2)) + g*l4*m2*sin(phi2) + ...              g*l5*m3*sin(phi2) + ...              l1*l2*m1*sin(phi1 - phi2)*...               power(phi1d,2) + ...              power(l5,3)*m3*power(sin(phi2),2)*...                sin(cos((h - l5*cos(phi2))/l3) + phi2)*...                power(phi2d,2)/...               (l3*(1 - power(h - l5*cos(phi2),2)/power(l3,2))))))/...     (l3*(l3*(l1*(power(l2,2)*m1 + power(l4,2)*m2 + power(l5,2)*m3) - ...            l1*power(l2,2)*m1*power(cos(phi1 - phi2),2)) - ...         l1*l3*power(l5,2)*m3*power(cos(cos((h - l5*cos(phi2))/l3) + ...             phi2),2))));phi1dd=zd(2);phi2dd=zd(4);phi3dd=zd(6);N= (-((-(m3*cos(phi3)*(l5*sin(phi2)*...              power(phi2d,2) + ...             l3*sin(phi3)*power(phi3d,2) - ...             l5*cos(phi2)*phi2dd - ...             l3*cos(phi3)*phi3dd)) - ...        sin(phi3)*(-(g*m3) - ...           l5*m2*cos(phi2)*power(phi2d,2) - ...           l3*m2*cos(phi3)*power(phi3d,2) - ...           l5*m2*sin(phi2)*phi2dd - ...           l3*m2*sin(phi3)*phi3dd))/...      (mu*cos(phi3) - sin(phi3))));T= (m3*Csc(phi3)*(l5*sin(phi2)*power(phi2d,2) + ...       l3*sin(phi3)*power(phi3d,2) - ...       l5*cos(phi2)*phi2dd - ...       l3*cos(phi3)*phi3dd) + ...    mu*Csc(phi3)*(-(m3*cos(phi3)*...           (l5*sin(phi2)*power(phi2d,2) + ...             l3*sin(phi3)*power(phi3d,2) - ...             l5*cos(phi2)*phi2dd - ...             l3*cos(phi3)*phi3dd)) - ...        sin(phi3)*(-(g*m3) - ...           l5*m2*cos(phi2)*power(phi2d,2) - ...           l3*m2*cos(phi3)*power(phi3d,2) - ...           l5*m2*sin(phi2)*phi2dd - ...           l3*m2*sin(phi3)*phi3dd))/...     (mu*cos(phi3) - sin(phi3)));     zd=zd';end;