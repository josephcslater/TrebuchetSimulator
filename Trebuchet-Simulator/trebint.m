function zd=trebint(command,parameter1,parameter2,parameter3) %  TREBINT Equations of Motion for Trebuchet%  Created: 12-Dec-96 %  Using  : GUI Maker Ver 2.0 by Patrick Marchand %                         (pmarchan@motown.ge.com) %  Author : Joseph C. Slater, PhD%  Mods.  : 1-17-98 Added Plot Control Buttons%         : 1-18-98 Separated from TREBDSGN and optimized for speed%   %  Copyright (c) Joseph C.Slater   %   No permission is granted to modify or re-distribute this %	code in any manner. %	All standard disclaimers apply. global l1 l2 l3 l4 l5 m1 m2 m3 g h N mu i lt M J trlines int_timeglobal xmin xmax ymin ymax phi1init phi2init phi3init flag5 dmax h_uic_15g=9.806;mu=.01;fs=1/3;flag2=0;time=[];on=	[ 0.83 0.085 0.096 0.054 ];off= on;%[ 0.13 0.08 0.087 0.054 ];% Numerical Functions%Constrained section %	disp('Evaluating derivatives')z=parameter1;phi1=z(1);phi2=z(3);phi3=z(5);phi1d=z(2);phi2d=z(4);phi3d=z(6);y3t=-l5*cos(phi2)-l3*cos(phi3);y3td= l5*phi2d*sin(phi2)+l3*phi3d*sin(phi3);zd(1)=z(2);zd(3)=z(4);%----------------------------------------------------------%   If stuck on the ground and not going upif (y3t<=0) & (y3td<0)	zd(5)= l5*sin(phi2)*phi2d/...   (l3*sqrt(1 - power(h - l5*cos(phi2),2)/power(l3,2)));		zd(2)= (-((g*sin(phi1) - l2*sin(phi1 - phi2)*......          power(phi2d,2))/l1) - ...    l2*cos(phi1 - phi2)*(-(l1*l3*l5*m3*...           cos(acos((h - l5*cos(phi2))/l3) + phi2)*...           (-(g*sqrt(1 - power(h - l5*cos(phi2),2)/power(l3,2))) - ...             l5*sin(acos((h - l5*cos(phi2))/l3) + phi2)*...              power(phi2d,2))) + ...        l3*(l1*l2*m1*cos(phi1 - phi2)*...            (g*sin(phi1) - l2*sin(phi1 - phi2)*...               power(phi2d,2)) + ...           l1*(-(g*l2*m1*sin(phi2)) + g*l4*m2*sin(phi2) + ...              g*l5*m3*sin(phi2) + ...              l1*l2*m1*sin(phi1 - phi2)*...               power(phi1d,2) + ...              power(l5,3)*m3*power(sin(phi2),2)*...                sin(acos((h - l5*cos(phi2))/l3) + phi2)*...                power(phi2d,2)/...               (l3*(1 - power(h - l5*cos(phi2),2)/power(l3,2))))))/...     (l1*(l3*(l1*(J + power(l2,2)*m1 + power(l5,2)*m3) - ...            l1*power(l2,2)*m1*power(cos(phi1 - phi2),2)) - ...         l1*l3*power(l5,2)*m3*power(cos(acos((h - l5*cos(phi2))/l3) + ...             phi2),2))));				zd(4)= (-((-(l1*l3*l5*m3*cos(acos((h - l5*cos(phi2))/l3) + phi2)*...           (-(g*sqrt(1 - power(h - l5*cos(phi2),2)/power(l3,2))) - ...             l5*sin(acos((h - l5*cos(phi2))/l3) + phi2)*...              power(phi2d,2))) + ...        l3*(l1*l2*m1*cos(phi1 - phi2)*...            (g*sin(phi1) - l2*sin(phi1 - phi2)*...               power(phi2d,2)) + ...           l1*(-(g*l2*m1*sin(phi2)) + g*l4*m2*sin(phi2) + ...              g*l5*m3*sin(phi2) + ...              l1*l2*m1*sin(phi1 - phi2)*...               power(phi1d,2) + ...              power(l5,3)*m3*power(sin(phi2),2)*...                sin(acos((h - l5*cos(phi2))/l3) + phi2)*...                power(phi2d,2)/...               (l3*(1 - power(h - l5*cos(phi2),2)/power(l3,2))))))/...      (l3*(l1*(J + power(l2,2)*m1 + power(l5,2)*m3) - ...           l1*power(l2,2)*m1*power(cos(phi1 - phi2),2)) - ...        l1*l3*power(l5,2)*m3*power(cos(acos((h - l5*cos(phi2))/l3) + ...            phi2),2))));			zd(6)= (-((-(g*sqrt(1 - power(h - l5*cos(phi2),2)/power(l3,2))) - ...         l5*sin(acos((h - l5*cos(phi2))/l3) + phi2)*...          power(phi2d,2))/l3) + ...    l5*cos(acos((h - l5*cos(phi2))/l3) + phi2)*...      (-(l1*l3*l5*m3*cos(acos((h - l5*cos(phi2))/l3) + phi2)*...           (-(g*sqrt(1 - power(h - l5*cos(phi2),2)/power(l3,2))) - ...             l5*sin(acos((h - l5*cos(phi2))/l3) + phi2)*...              power(phi2d,2))) + ...        l3*(l1*l2*m1*cos(phi1 - phi2)*...            (g*sin(phi1) - l2*sin(phi1 - phi2)*...               power(phi2d,2)) + ...           l1*(-(g*l2*m1*sin(phi2)) + g*l4*m2*sin(phi2) + ...              g*l5*m3*sin(phi2) + ...              l1*l2*m1*sin(phi1 - phi2)*...               power(phi1d,2) + ...              power(l5,3)*m3*power(sin(phi2),2)*...                sin(acos((h - l5*cos(phi2))/l3) + phi2)*...                power(phi2d,2)/...               (l3*(1 - power(h - l5*cos(phi2),2)/power(l3,2))))))/...     (l3*(l3*(l1*(J + power(l2,2)*m1 + power(l5,2)*m3) - ...            l1*power(l2,2)*m1*power(cos(phi1 - phi2),2)) - ...         l1*l3*power(l5,2)*m3*power(cos(acos((h - l5*cos(phi2))/l3) + ...             phi2),2))));			phi1dd=zd(2);phi2dd=zd(4);phi3dd=zd(6);	N= (-((-(m3*cos(phi3)*(l5*sin(phi2)*...              power(phi2d,2) + ...             l3*sin(phi3)*power(phi3d,2) - ...             l5*cos(phi2)*phi2dd - ...             l3*cos(phi3)*phi3dd)) - ...        sin(phi3)*(-(g*m3) - ...           l5*m3*cos(phi2)*power(phi2d,2) - ...           l3*m3*cos(phi3)*power(phi3d,2) - ...           l5*m3*sin(phi2)*phi2dd - ...           l3*m3*sin(phi3)*phi3dd))/...      (mu*cos(phi3) - sin(phi3))));	time=command;		T= (m3*csc(phi3)*(l5*sin(phi2)*power(phi2d,2) + ...       l3*sin(phi3)*power(phi3d,2) - ...       l5*cos(phi2)*phi2dd - ...       l3*cos(phi3)*phi3dd) + ...    mu*csc(phi3)*(-(m3*cos(phi3)*...           (l5*sin(phi2)*power(phi2d,2) + ...             l3*sin(phi3)*power(phi3d,2) - ...             l5*cos(phi2)*phi2dd - ...             l3*cos(phi3)*phi3dd)) - ...        sin(phi3)*(-(g*m3) - ...           l5*m3*cos(phi2)*power(phi2d,2) - ...           l3*m3*cos(phi3)*power(phi3d,2) - ...           l5*m3*sin(phi2)*phi2dd - ...           l3*m3*sin(phi3)*phi3dd))/...     (mu*cos(phi3) - sin(phi3)));else    	zd(5)=z(6);	    zd(2)= (-((g*sin(phi1) - l2*sin(phi1 - phi2)*...          power(phi2d,2))/l1) - ...    l2*cos(phi1 - phi2)*(-(l1*l3*l5*m3*cos(phi2 - phi3)*...           (g*sin(phi3) - l5*sin(phi2 - phi3)*...              power(phi2d,2))) + ...        l3*(l1*l2*m1*cos(phi1 - phi2)*...            (g*sin(phi1) - l2*sin(phi1 - phi2)*...               power(phi2d,2)) + ...           l1*(-(g*l2*m1*sin(phi2)) + g*l4*m2*sin(phi2) + ...              g*l5*m3*sin(phi2) + ...              l1*l2*m1*sin(phi1 - phi2)*...               power(phi1d,2) + ...              l3*l5*m3*sin(phi2 - phi3)*...               power(phi3d,2))))/...     (l1*(l3*(l1*(J + power(l2,2)*m1 + power(l5,2)*m3) - ...            l1*power(l2,2)*m1*power(cos(phi1 - phi2),2)) - ...         l1*l3*power(l5,2)*m3*power(cos(phi2 - phi3),2))));			zd(4)= (-((-(l1*l3*l5*m3*cos(phi2 - phi3)*...           (g*sin(phi3) - l5*sin(phi2 - phi3)*...              power(phi2d,2))) + ...        l3*(l1*l2*m1*cos(phi1 - phi2)*...            (g*sin(phi1) - l2*sin(phi1 - phi2)*...               power(phi2d,2)) + ...           l1*(-(g*l2*m1*sin(phi2)) + g*l4*m2*sin(phi2) + ...              g*l5*m3*sin(phi2) + ...              l1*l2*m1*sin(phi1 - phi2)*...               power(phi1d,2) + ...              l3*l5*m3*sin(phi2 - phi3)*...               power(phi3d,2))))/...      (l3*(l1*(J + power(l2,2)*m1 + power(l5,2)*m3) - ...           l1*power(l2,2)*m1*power(cos(phi1 - phi2),2)) - ...        l1*l3*power(l5,2)*m3*power(cos(phi2 - phi3),2))));			zd(6)= (-((g*sin(phi3) - l5*sin(phi2 - phi3)*...          power(phi2d,2))/l3) + ...    l5*cos(phi2 - phi3)*(-(l1*l3*l5*m3*cos(phi2 - phi3)*...           (g*sin(phi3) - l5*sin(phi2 - phi3)*...              power(phi2d,2))) + ...        l3*(l1*l2*m1*cos(phi1 - phi2)*...            (g*sin(phi1) - l2*sin(phi1 - phi2)*...               power(phi2d,2)) + ...           l1*(-(g*l2*m1*sin(phi2)) + g*l4*m2*sin(phi2) + ...              g*l5*m3*sin(phi2) + ...              l1*l2*m1*sin(phi1 - phi2)*...               power(phi1d,2) + ...              l3*l5*m3*sin(phi2 - phi3)*...               power(phi3d,2))))/...     (l3*(l3*(l1*(J + power(l2,2)*m1 + power(l5,2)*m3) - ...            l1*power(l2,2)*m1*power(cos(phi1 - phi2),2)) - ...         l1*l3*power(l5,2)*m3*power(cos(phi2 - phi3),2))));	endzd=zd';%if time>lt%       set(h_uic_15,'string',['t = ' num2str(time)])%       lt=time;%       drawnow%end